for (i in 1:length(lista)) {
print(i)
seguidores <- seguidores %soma% "|" %soma% lista[[i]]$screenName
}
return(seguidores)
}
deps <- read.csv('deps.csv', stringsAsFactors=FALSE)
library(dplyr)
nomes_prob <- filter(deps, grepl("Not Found", friends))$twitter
seguidores <- list()
for (i in nomes_prob) {
print(i)
tuser <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
library(twitteR)
`%soma%` <- function(e1, e2) {
return(paste0(e1, e2))
}
api_key <- "4Smab6YhffWe3xxoMBgJWESfa"
api_secret <- "bFiYU4cd8YSFeR1FfwEEhe5AVajs3s7QT4Cw8Rn0u5JzdL2Mio"
access_token <- "37321213-eZPjJZnVVdvtXHw0RFIe9YJZMv2EiI7TcrosH3TLF"
access_token_secret <- "38LuflE0nKz9NnjIRPQnIShB9kIk1YS4mIILlSA55vXdM"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
devolve_seguidores <- function(usuario) { # Recebe lista
print("passou1")
lista <- try(usuario$getFriends(), silent=TRUE)
print("passou2")
seguidores <- NULL
if (length(lista)==0) {
return("")
}
if (!is.list(lista)) {
return(lista)
}
for (i in 1:length(lista)) {
print(i)
seguidores <- seguidores %soma% "|" %soma% lista[[i]]$screenName
}
return(seguidores)
}
deps <- read.csv('deps.csv', stringsAsFactors=FALSE)
library(dplyr)
nomes_prob <- filter(deps, grepl("Not Found", friends))$twitter
length(nomes_prob)
seguidores <- list()
for (i in nomes_prob) {
print(i)
tuser <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
load("~/seguidores-prob.RData")
for (i in nomes_prob) {
print(i)
tuser <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
i
tuser <- getUser(i)
tuser <- getUser(i)
tuser <- getUser(i)
tuser <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
tuser
tunha <- getUser(i)
i
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
library(twitteR)
`%soma%` <- function(e1, e2) {
return(paste0(e1, e2))
}
api_key <- "4Smab6YhffWe3xxoMBgJWESfa"
api_secret <- "bFiYU4cd8YSFeR1FfwEEhe5AVajs3s7QT4Cw8Rn0u5JzdL2Mio"
access_token <- "37321213-eZPjJZnVVdvtXHw0RFIe9YJZMv2EiI7TcrosH3TLF"
access_token_secret <- "38LuflE0nKz9NnjIRPQnIShB9kIk1YS4mIILlSA55vXdM"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
devolve_seguidores <- function(usuario) { # Recebe lista
print("passou1")
lista <- try(usuario$getFriends(), silent=TRUE)
print("passou2")
seguidores <- NULL
if (length(lista)==0) {
return("")
}
if (!is.list(lista)) {
return(lista)
}
for (i in 1:length(lista)) {
print(i)
seguidores <- seguidores %soma% "|" %soma% lista[[i]]$screenName
}
return(seguidores)
}
deps1 <- read.csv('deps.csv', stringsAsFactors=FALSE)
library(dplyr)
library(tidyr)
deps <- read.csv('deps.csv', stringsAsFactors=FALSE)
library(dplyr)
nomes_prob <- filter(deps, grepl("Not Found", friends))$twitter
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
seguidores <- list()
for (i in nomes_prob) {
print(i)
tuser <- getUser(i)
seguidores[i] <- devolve_seguidores(tuser)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
library(twitteR)
`%soma%` <- function(e1, e2) {
return(paste0(e1, e2))
}
api_key <- "4Smab6YhffWe3xxoMBgJWESfa"
api_secret <- "bFiYU4cd8YSFeR1FfwEEhe5AVajs3s7QT4Cw8Rn0u5JzdL2Mio"
access_token <- "37321213-eZPjJZnVVdvtXHw0RFIe9YJZMv2EiI7TcrosH3TLF"
access_token_secret <- "38LuflE0nKz9NnjIRPQnIShB9kIk1YS4mIILlSA55vXdM"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
devolve_seguidores <- function(usuario) { # Recebe lista
print("passou1")
lista <- try(usuario$getFriends(), silent=TRUE)
print("passou2")
seguidores <- NULL
if (length(lista)==0) {
return("")
}
if (!is.list(lista)) {
return(lista)
}
for (i in 1:length(lista)) {
print(i)
seguidores <- seguidores %soma% "|" %soma% lista[[i]]$screenName
}
return(seguidores)
}
library(dplyr)
deps <- read.csv('deps2.csv', stringsAsFactors=FALSE)
library(dplyr)
nomes_prob <- filter(deps, grepl("Not Found", friends))$twitter
nomes_prob
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
for (i in 1:nrow(deps)) {
print(deps$nome[i])
print("não deu")
x <- seguidores[[deps$twitter[i]]]
print("deu")
if (length(x)>0)
deps$friends[i] <- seguidores[[deps$twitter[i]]]
}
nomes_prob <- filter(deps, grepl("Not Found", friends))$twitter
nomes_prob
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
write.csv(deps, file='deps2.csv', row.names=FALSE)
nomes_prob <- filter(deps, grepl("Not Found", friends))$twitter
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
tunha <- lookupUsers(nomes_prob)
for (i in 1:nrow(deps)) {
print(deps$nome[i])
print("não deu")
x <- seguidores[[deps$twitter[i]]]
print("deu")
if (length(x)>0)
deps$friends[i] <- seguidores[[deps$twitter[i]]]
}
api_key <- "vxNZ8trVerxqY6Yl5ZOQK11FO"
api_secret <- "5NhOxUaGh64W0n09HKuRbKxoa4KXMnMS9dXINK9RIhOzbsFmUA"
access_token <- "104475016-IaBnJWtCpQmaEr8U5o6zwlmhQ5e0TWdraX7kJqdq"
access_token_secret <- "kFMn9Ggr957ABpUCuXVyoz6ToBZKao96OKDcgVblypSWk"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library(twitteR)
`%soma%` <- function(e1, e2) {
return(paste0(e1, e2))
}
api_key <- "vxNZ8trVerxqY6Yl5ZOQK11FO"
api_secret <- "5NhOxUaGh64W0n09HKuRbKxoa4KXMnMS9dXINK9RIhOzbsFmUA"
access_token <- "104475016-IaBnJWtCpQmaEr8U5o6zwlmhQ5e0TWdraX7kJqdq"
access_token_secret <- "kFMn9Ggr957ABpUCuXVyoz6ToBZKao96OKDcgVblypSWk"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
deps <- read.csv('deps2.csv', stringsAsFactors=FALSE)
library(dplyr)
nomes_prob <- filter(deps, grepl("Not Found", friends))$twitter
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
devolve_seguidores <- function(usuario) { # Recebe lista
print("passou1")
lista <- try(usuario$getFriends(), silent=TRUE)
print("passou2")
seguidores <- NULL
if (length(lista)==0) {
return("")
}
if (!is.list(lista)) {
return(lista)
}
for (i in 1:length(lista)) {
print(i)
seguidores <- seguidores %soma% "|" %soma% lista[[i]]$screenName
}
return(seguidores)
}
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
nomes_prob
nprob <- nomes_prob
nomes_prob <- c(nprob[c(2,5)])
nomes_prob
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
head(deps2,30)
deps2 <- deps %>%
transform(friends = strsplit(friends, "\\|")) %>%
unnest(friends)
library(tidyr)
deps2 <- deps %>%
transform(friends = strsplit(friends, "\\|")) %>%
unnest(friends)
deps2 <- deps2 %>%
filter(friends!="")
head(deps2,30)
write.csv(deps2, "deps.csv", row.names=FALSE)
table(deps$twitter)
deps[deps$twitter="francischini_"]
deps[deps$twitter=="francischini_"]
str(deps)
filter(deps, twitter=="francischini)")
filter(deps, twitter=="francischini_")
nomes_prob <- filter(deps, friends==""))$twitter
nomes_prob <- filter(deps, friends=="")$twitter
nomes_prob
seguidores <- list()
for (i in nomes_prob) {
print(i)
tunha <- getUser(i)
seguidores[i] <- devolve_seguidores(tunha)
save.image("~/seguidores-prob.RData")
Sys.sleep(120)
getCurRateLimitInfo(c("lists", "users"))
}
names(table(deps$friends)==1)
names(table(deps$twitter)==1)
table(deps$twitter)==1
table(deps$twitter)[table(deps$twitter)==1]
filter(deps, twitter=="alberto_fraga")
deps <- read.csv('deps.csv', stringsAsFactors=FALSE)
filter(deps, twitter=="alberto_fraga")
table(deps$twitter)[table(deps$twitter)==1]
filter(deps, twitter=="francischini_")
filter(deps, twitter=="gguimaraespt")
deps2 <- read.csv('deps2.csv', stringsAsFactors=FALSE)
teste <- table(deps$twitter)[table(deps$twitter)==1]
teste
teste <- table(deps2$twitter)[table(deps2$twitter)==1]
teste
for(i in teste) {
print(i)
parte <- filter(deps, twitter==i)
print(nrow(parte))
}
teste
for(i in names(teste)) {
print(i)
parte <- filter(deps, twitter==i)
print(nrow(parte))
}
nrow(deps)
tunha <- getUser('francischini_')
source('~/twitter-edados.R')
deps <- read.csv('deps.csv', stringsAsFactors=FALSE)
str(deps)
valores <- table(deps$friends)
vetorzao <- head(sort(valores, decreasing=TRUE), 300)
head(vetorzao, 40)
library(twitteR)
`%soma%` <- function(e1, e2) {
return(paste0(e1, e2))
}
api_key <- "vxNZ8trVerxqY6Yl5ZOQK11FO"
api_secret <- "5NhOxUaGh64W0n09HKuRbKxoa4KXMnMS9dXINK9RIhOzbsFmUA"
access_token <- "104475016-IaBnJWtCpQmaEr8U5o6zwlmhQ5e0TWdraX7kJqdq"
access_token_secret <- "kFMn9Ggr957ABpUCuXVyoz6ToBZKao96OKDcgVblypSWk"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
tuser <- getUser('francischini_')
chikini <- tuser$getFriends()
chikini <- tuser$getFriends()
length(chikini)
chikini <- tuser$getFriends()
length(chikini)
tuser <- getUser('francischini_')
library(tidyr)
library(dplyr)
setwd('/var/www/html/vai-passar/previsor/')
source('orientacoes2.R')
install.packages('gmodels')
library(tidyr)
library(dplyr)
setwd('/var/www/html/vai-passar/previsor/')
source('orientacoes2.R')
setwd('/var/www/html/vai-passar/previsor/planilhas/')
orientacoes <- read.csv('orientacoes.csv', stringsAsFactors=FALSE, sep=';', header=FALSE)
# Abre o banco
# orientacoes$V5[orientacoes$V5=="Não"] <- 0
# orientacoes$V5[orientacoes$V5=="Sim"] <- 1
# orientacoes$V5[orientacoes$V5=="Liberado"] <- NA
# orientacoes$V5[orientacoes$V5=="Obstrução"] <- NA
# Processa a variável V5
orientacoes$V4[orientacoes$V4=="PmdbPpPtbDem..."] <- "Pmdb|Pp|Ptb|Dem"
orientacoes$V4[orientacoes$V4=="PmdbPpPtbDemPscPhsPen"] <- "Pmdb|Pp|Ptb|Dem|Psc|Phs|Pen"
orientacoes$V4[orientacoes$V4=="PmdbPpPtbDemSdPscPhsPen"] <- "Pmdb|Pp|Ptb|Dem|Sd|Psc|Phs|Pen"
orientacoes$V4[orientacoes$V4=="PmdbPpPtbPscPhsPen"] <- "Pmdb|Pp|Ptb|Psc|Phs|Pen"
orientacoes$V4[orientacoes$V4=="PrbPtnPmnPrpPsdcPrtb"] <- "Prb|Ptn|Pmn|Prp|Psdc|Prtb"
orientacoes$V4[orientacoes$V4=="PrbPtnPmnPrpPsdcPrtbPtcPslPtdoB"] <- "Prb|Ptn|Pmn|Prp|Psdc|Prtb|Ptc|Psl|PtdoB"
orientacoes$V4[orientacoes$V4=="PsdbPsbPpsPv"] <- "Psdb|Psb|Pps|Pv"
orientacoes$V4[orientacoes$V4=="PtPsdPrPdtProsPc"] <- "Psdb|Psb|Pps|Pv"
orientacoes$V4[orientacoes$V4=="Repr.PSL"] <- "PSL"
orientacoes$V4[orientacoes$V4=="Repr.PTC"] <- "PTC"
orientacoes$V4[orientacoes$V4=="Repr.PTdoB"] <- "PTdoB"
orientacoes$V4[orientacoes$V4=="Solidaried"] <- "SD"
orientacoes$V4[orientacoes$V4=="GOV."] <- "Gov"
orientacoes$V4[orientacoes$V4=="Repr.PSOL"] <- "psol"
orientacoes$V4[orientacoes$V4=="PtPsdPrPdtProsPcdob"] <- "Pt|Psd|Pr|Pdt|Pros|Pcdob"
orientacoes$V4[orientacoes$V4=="PsdbPsbPps"] <- "Psdb|Psb|Pps"
# Altera as entradas pra facilitar trabalho
# Estamos separando partidos com '|', para poder separa-los em colunas
# posteriormente
orientacoes$V4 <- tolower(orientacoes$V4)
# transforma partidos tudo para letras minusculas
orientacoes <- orientacoes %>%
transform(V4 = strsplit(V4, "\\|")) %>%
unnest(V4)
# Separa as variaveis
colnames(orientacoes) <- c("ID_VOTACAO", "DATA", "HORA", "PARTIDO", "ORIENTACAO")
# Altera nomes das colunas de "V4" para nomes pertinentes
orientacoes <- orientacoes[!duplicated(orientacoes),]
# Remove valores duplicados
# Obter apenas a orientacao do governo. Para isso, copiamos o df:
orientacoes <- mutate(orientacoes, ORIENTACAO=ifelse(ORIENTACAO=="Obstrução", "Não", ORIENTACAO))
orientacoes <- spread(orientacoes, PARTIDO, ORIENTACAO)
#  orientacoes <- select(orientacoes, ID_VOTACAO, pt, pmdb, psd, pcdob, pdt, prb, pr , pros)
votos <- read.csv("votos.csv", , stringsAsFactors=FALSE, sep=';')
proposicoes <- read.csv("proposicoes.csv", stringsAsFactors=FALSE, sep=';')
conta_sim <- function(x) {
n_sim <- try(table(x)[["SIM"]], TRUE)
return(n_sim)
}
votos <- votos %>%
filter((VOTO=="SIM" | VOTO=="NAO")) %>%
mutate(votos_sim=ifelse(VOTO=="SIM", 1, 0)) %>%
group_by(ID_VOTACAO) %>%
summarise(contagem=n(), votos_sim=sum(votos_sim))
votos <- inner_join(votos, proposicoes)
library(randomForest)
votos <- inner_join(votos,orientacoes, by="ID_VOTACAO")
votos <- select(votos, ID_VOTACAO, contagem, dem, TIPO, gov, minoria, sd,starts_with("p"), resultado=votos_sim)
nome_colunas <- colnames(votos)[2:length(colnames(votos))]
for (i in nome_colunas) {
print(i)
print(sum(is.na(votos[[i]])))
}
# votosn <- inner_join(votos, proposicoes, by="ID_VOTACAO")
# write.csv(votosn, file="orietacoes_e_votacoes.csv", row.names=FALSE)
#Excluindo PSOL, pois possui muitas NAs
# Também vamos excluir ptc, ptdob, pros e sd
votos <- select(votos, -ptc, -ptdob, -pros, -sd)
for (i in colnames(votos)) {
if (i != "resultado" & i !="contagem") {
votos[[i]] <- as.factor(votos[[i]])
}
}
# O modelo é bom
modelo <- randomForest(resultado ~ gov + minoria + pt + pmdb
+ psdb + psd + TIPO,
data=votos, ntree=500)
modelo
varImpPlot(modelo)
vari <- c("Sim", "Não", "Liberado")
varo <- c("Sim", "Não")
vara <- c("MPV", "PDC", "PEC", "PL", "PLP", "REQ", "REC")
previsor <- expand.grid(varo, vari, vari,
vari, vari,  varo, vara)
colnames(previsor) <- c("gov", "minoria",  "pmdb",
"psd", "psdb",  "pt", "TIPO")
previsor <- as.data.frame(previsor, stringsAsFactors=FALSE)
previsor$resultado <- predict(modelo,previsor)
# write.csv(previsor, "previsto2.csv", row.names=FALSE)
previsor_pec <- filter(previsor, TIPO=="PEC")
previsor_plp <- filter(previsor, TIPO=="PLP")
previsor_plp$resultado <- previsor_plp$resultado/513
for (i in 1:nrow(previsor_pec)) {
if ( previsor_pec$resultado[i] <= 307.8) {
previsor_pec$resultado[i] <- previsor_pec$resultado[i] * (1/307.8) * (1/2)
}
else {
previsor_pec$resultado[i] <- previsor_pec$resultado[i] * (1/205.2) * (1/2)
}
}
summary(previsor_plp$resultado)
previsor_plp$KIND <- 1
previsor_pec$KIND <- 2
previsor_first$KIND <- 0
previsor <- rbind(previsor_first, previsor_pec, previsor_plp)
previsor <- select(previsor, -TIPO)
for (i in 1:(ncol(previsor)-1)) {
previsor[,i] <- gsub("Sim", "2", previsor[,i])
previsor[,i] <- gsub("Liberado", "1", previsor[,i])
previsor[,i] <- gsub("Não", "0", previsor[,i])
}
previsor$resultado[previsor$resultado > .99] <- .99
previsor_first <- filter(previsor, TIPO=="PL" | TIPO=="REQ" | TIPO=="MPV" | TIPO=="PDC")
str(previsor)
table(previsor$KIND)
duplicated(previsor)
previsor <- previsor[!duplicated(previsor),]
table(previsor$KIND)
str(previsor)
write.csv(previsor, "previsto.csv", row.names=FALSE)
